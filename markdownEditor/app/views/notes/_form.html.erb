<%= form_for(@note) do |f| %>
  <% if @note.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@note.errors.count, "error") %> prohibited this note from being saved:</h2>

      <ul>
      <% @note.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title %><br>
    <%= f.text_field :title, :maxlength => 250, :size=> 40 %>
  </div>
  <div class="ui-widget">
    <%= f.label :tag %><br>
    <%= f.text_field :tag, value: @note.tag.to_s %>
  </div>
  
  
  
    <script>
  $(function() {
      
      function split( val ) {
      return val.split( /,\s*/ );
      }
      function extractLast( term ) {
      return split( term ).pop();
      }
 
    $( "#note_tag" )
      // don't navigate away from the field on tab when selecting an item
      .bind( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).autocomplete( "instance" ).menu.active ) {
          event.preventDefault();
        }
      })
      .autocomplete({
        minLength: 1,
        source: function( request, response ) {
          // delegate back to autocomplete, but extract the last term
          response( $.ui.autocomplete.filter(
            <%= @tags.html_safe %> , extractLast( request.term ) ) );
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
          terms.push( ui.item.value );
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
  });
      
    
  </script>
  
  
  <div class="field">
    <%= f.label :Note %><br>
    <%= f.text_area :inputText, :cols => 150, :rows => 50 %>
  </div>
  
  <div id="epiceditor"></div>
  <div id="preview"></div>
  <%= javascript_include_tag "epiceditor.js" %>
  <script>
    var options = {
      container: 'epiceditor',
      textarea: 'note_inputText',
      clientSideStorage: false,
      buttons: false,
      autogrow: {
        minHeight: 400,
        maxHeight: false,
        scroll: true
      }
    }
  
    var editor = new EpicEditor(options).load();

    editor.on('update', function(){
      document.querySelector('#preview').innerHTML = this.exportFile(null, 'html');
    }).emit('update');
  </script>
  
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
